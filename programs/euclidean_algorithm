
# Load the first integer into register $0
addi $0, $30, 2024
# Load the second integer into register $1
addi $1, $30, 1066

# Call the gcd function
jalb gcd

# Exit program
exit

# GCD function
gcd:

# Initialize $2 to hold first integer from $0
addi $2, $0, 0

# Initialize $3 to hold second integer from $1
addi $3, $1, 0

gcd_loop:

# Check if b is zero
beq $3, $10, gcd_exit

# Calculate remainder (a % b) and store it in $4
mod $4, $2, $3

# Update a to b and b to remainder
add $2, $30, $3
add $3, $30, $4

# Repeat loop
jb gcd_loop

gcd_exit:
# Result is stored in $2, put it in $4
add $4, $30, $2

# Return to main
jr $31